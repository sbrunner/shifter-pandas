[tool.ruff]
target-version = "py310"
line-length = 110

[tool.ruff.lint]
select = []
ignore = ["ANN401", "C90", "D100", "D104", "D105", "D107", "D200", "D202", "D207", "D208", "D212", "E501", "EM101", "EM102", "ERA001", "FA", "FBT001", "FBT002", "FIX002", "I001", "PERF203", "PLR09", "PLR2004", "Q000", "S101", "SIM105", "T201", "TD002", "W293"]
extend-select = ["UP", "I", "S", "B", "ALL"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/tests/**" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/test_*.py" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]
"**/*_test.py" = ["ANN", "ARG", "ASYNC", "BLE001", "D", "DTZ", "E722", "FBT003", "INP001", "N", "PGH003", "PLC", "PLR2004", "PLW0603", "PLW1641", "RET", "RUF012", "RUF100", "S104", "S105", "S106", "S108", "S113", "S324", "S603", "S607", "S608", "SLF", "TRY003", "TRY301"]

[tool.poetry]
version = "0.0.0"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
requests = "2.32.5"
pandas = "2.3.3"
openpyxl = "3.1.5"
wikidata = "0.8.1"
toml = "0.10.2"
certifi = "2025.8.3"
urllib3 = "2.5.0"
idna = "3.10"

[tool.poetry.group.dev.dependencies]
prospector-profile-duplicated = "1.10.5"
prospector-profile-utils = "1.26.5"
prospector = { version = "1.17.3", extras = ["with_bandit", "with_mypy", "with_pyroma", "with_ruff"] }
pytest = "8.4.2"
coverage = "7.10.7"
types-toml = "0.10.8.20240310"
types-requests = "2.32.4.20250913"

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[project]
dynamic = ["dependencies", "version"]
name = "shifter-pandas"
description = "Convert some data into Panda DataFrames"
readme = "README.md"
keywords = ["shifter", "pandas"]
license = "BSD-2-Clause"
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Typing :: Typed',
]
authors = [{name = "StÃ©phane Brunner",email = "stephane.brunner@gmail.com"}]
packages = [{ include = "shifter_pandas" }, { include = "shifter_pandas/py.typed" }]
requires-python = ">=3.10"
dependencies = ["requests", "pandas", "openpyxl", "wikidata", "toml", "certifi", "urllib3", "idna"]

[project.urls]
homepage = "https://hub.docker.com/r/sbrunner/shifter-pandas/"
repository = "https://github.com/sbrunner/shifter-pandas"
"Bug Tracker" = "https://github.com/sbrunner/shifter-pandas/issues"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"
